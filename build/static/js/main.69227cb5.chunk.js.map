{"version":3,"sources":["components/People.js","components/Services.js","components/Notification.js","App.js","index.js"],"names":["People","people","delPhone","map","person","key","name","phone","onClick","id","url","axios","get","then","response","data","phoneAdded","post","phoneDel","delete","toUpdate","put","Notification","message","App","useState","setPeople","newName","setNewName","newPhone","setNewPhone","errToggle","setErr","hook","Services","returnedInfo","useEffect","onSubmit","event","preventDefault","nameObj","length","findExist","find","el","window","confirm","idToReplace","updatedBook","filter","returned","concat","catch","error","console","log","result","showErr","value","onChange","target","type","toDelete","newList","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69227cb5.chunk.js","sourcesContent":["import React from 'react'\n\nconst People = ({ people, delPhone }) => {\n\n  return (\n    people.map(person => \n      <ul key={person.name}>\n        <li>{person.name} {person.phone} <button onClick={() => delPhone(person.id)}>Delete</button> </li>\n      </ul>\n    )\n  )\n}\n\nexport default People","import axios from 'axios'\n\nconst url = 'http://localhost:3001/api/peps'\n\nconst getAll = () => {\n  return axios.get(url).then(response => response.data)\n}\n\nconst create = (phoneAdded) => {\n  return axios.post(url, phoneAdded).then(response => response.data)\n}\n\nconst update = (id, toUpdate) => {\n  const request = axios.put(`${url}/${id}`, toUpdate)\n  return request.then(response => response.data)\n}\n\nconst del = (phoneDel) => { \n  return axios.delete(phoneDel).then(response => response.data)\n}\n\nexport default { getAll, create, del, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return ''\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react' \nimport People from './components/People'\nimport Services from './components/Services'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ people, setPeople ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ errToggle, setErr ] = useState([])\n\n  const hook = () => { \n    Services\n      .getAll()\n      .then(returnedInfo => setPeople(returnedInfo))\n  }\n  \n  useEffect(hook, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    \n    //Add part\n    const nameObj = {\n      name: newName,\n      phone: newPhone,\n      id: people.length + 1\n    }\n    const add = () => { \n      Services\n      .create(nameObj)\n      .then(returned => setPeople(people.concat(returned)))\n      .then(result => setErr('New phone added'))\n      .catch(error => { \n        console.log(error.response.data.error)\n        const showErr = error.response.data.error\n        setErr(showErr)\n      }) \n      setNewName('')\n      setNewPhone('')\n    }\n\n    // If exist \n    const findExist = people.find(el => el.name === nameObj.name)\n    \n    if (findExist) {\n      const winConfirm = window.confirm(`Do you want to replace ${nameObj.name}`)\n      if (winConfirm) {\n        const idToReplace = findExist.id\n        const updatedBook = people.filter(el => el.name !== findExist.name)\n        Services \n          .update(idToReplace, nameObj)\n          .then(returned => setPeople(updatedBook.concat(returned)))\n          .catch(error => {\n            console.log(error)\n          })\n          .then(hook)\n      }\n    } else {\n      add()\n    }\n  }\n\n  const handleNewName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNewPhone = (event) => {\n    setNewPhone(event.target.value)\n  } \n\n  const delPhone = (id) => {\n    const url = `http://localhost:3001/api/peps/${id}`\n    const toDelete = people.find(el => el.id === id) \n    const newList = people.filter(list => list.id !== id)\n    const result = window.confirm(`Are you sure you want to delete ${toDelete.name}`) \n    console.log(toDelete)\n    \n    if (result === true) {\n      Services\n      .del(url)\n      .then(setPeople(newList))\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errToggle}/>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n          phone: <input value={newPhone} onChange={handleNewPhone} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <People people={people} delPhone={delPhone}/>    \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}